version: '3'
services:
  db:
    build:
      context: back_end/db
      dockerfile: Dockerfile-dev
    ports:
     - 5435:5432
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  flask-api:
    build:
      context: back_end/
      dockerfile: Dockerfile-dev
    ports:
      - 5000:5000
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@db:5432/test
    depends_on:
      - db
    env_file:
      - flask.env

  client:
    build:
      context: ./react-app/
      dockerfile: Dockerfile-dev
      args:
        - NODE_ENV=development
        - REACT_APP_API_URL=${REACT_APP_API_URL}
    ports:
      - 3000:3000
    depends_on:
      - flask-api
      - db

  certbot:
    image: certbot/certbot
    volumes:
    - ./certbot/conf:/etc/letsencrypt
    - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

  nginx:
    image: nginx:1.15.0-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf/:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - flask-api
      - client


volumes:
  pgdata:
